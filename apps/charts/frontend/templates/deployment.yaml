apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ .Values.name }}
  labels:
    {{- include "app.label" . | nindent 4 }}
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{- include "app.label" . | nindent 4 }}
  template:
    metadata:
      labels:
        {{- include "app.label" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Values.name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.servicePort }}
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: {{ .Values.name }}
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: {{ .Values.namePreview }}
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: false
---

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ .Values.name }}
# spec:
#   selector:
#     matchLabels:
#       {{- include "app.label" . | nindent 6 }}
#   replicas: {{ .Values.replicaCount }}
#   template:
#     metadata:
#       labels:
#          {{- include "app.label" . | nindent 8 }}
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "8090"
#         prometheus.io/path: "/metrics"
#     spec:
#       containers:
#         - name: {{ .Values.name }}
#           image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
#           imagePullPolicy: Always
#           ports:
#             - containerPort: {{ .Values.servicePort }}